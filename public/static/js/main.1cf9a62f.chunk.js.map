{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","Utils.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","role","roles","parse","getItem","required","value","className","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","Option","Select","isEmail","vusername","vpassword","Register","onChangeRole","handleRegister","onChangeEmail","successful","register","showSearch","width","optionFilterProp","defaultValue","filterOption","input","option","children","toLowerCase","indexOf","authHeader","user","get","headers","amount","recipient","ticketType","quantity","ticketNumbers","shopUsername","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","id","map","index","key","accounting","require","format_Number_int","number","formatNumber","symbol","thousand","format","precision","pointFormatter","formatMoney","numberFormater","currencyParser","val","group","Intl","NumberFormat","replace","decimal","reversedVal","RegExp","digitsAfterDecimalCount","split","Math","pow","Number","isNaN","console","TabPane","Tabs","TICKETS","OI93EX","ZMGPBJ","QW5ZGQ","BoardUser","loadBalance","a","getUserBoard","transactions","log","loadTrans","getUserTransactions","loadTickets","getOwnerTickets","tickets","item","ticketNumber","ownedItems","loadRedeemTickets","getRedeemTickets","redeemTickets","newAmount","onChangeQuantity","ticketQuantity","onRecipientChange","onChangeShopUsername","handleOk","myRef1","current","validateFields","createNewTokens","result","success","modal1Visible","handleOkTransfer","myRef","transferTokens","balance","fromUpdatedBalance","modal2Visible","notification","description","onClick","handleOkBuyTicket","buyTicket","modal3Visible","handleOkUseTicket","useTicket","selectedRowKeys","confirm","Modal","title","icon","ExclamationCircleOutlined","okText","cancelText","onOk","confirmTransfer","confirmBuyTickets","confirmUseTickets","anyValidation","rule","callback","onChangeTicket","onSelectChange","totalSupply","undefined","React","createRef","columns","dataIndex","render","from","textAlign","transType","timeStamp","moment","parseInt","columns2","price","buyDateTime","columns4","buyer","useDateTime","columns3","status","columns5","owner","redeemDateTime","rowSelection","hasSelected","onBack","back","tags","color","subTitle","extra","setModal3Visible","setModal2Visible","setModal1Visible","suffix","prefix","margin","ix","marginTop","tab","dataSource","marginBottom","marginRight","placeholder","marginLeft","top","visible","onCancel","wrapperCol","span","offset","layout","Item","label","rules","validator","_","names","Promise","reject","Error","step","formatter","parser","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","App","logOut","showModeratorBoard","showAdminBoard","includes","logout","href","exact","path","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1cf9a62f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://pogofdev.ooguy.com:8082/api/auth/\";\n// const API_URL = \"http://localhost:8082/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password,role) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,roles:[role]\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/user\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\n\nimport AuthService from \"../services/auth.service\";\nimport {Select} from \"antd\";\nconst {Option} = Select;\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\",\n        role:'user'\n\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n    onChangeRole = (role) => {\n        this.setState({role})\n    }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password,\n        this.state.role,\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n                  <div className=\"form-group\">\n                      <label htmlFor=\"password\">Role</label>\n                      <Select\n                          showSearch\n                          style={{width: `100%`}}\n                          // placeholder=\"Select a ticket to buy\"\n                          optionFilterProp=\"children\"\n                          onChange={this.onChangeRole}\n                          defaultValue={'user'}\n                          // onFocus={onFocus}\n                          // onBlur={onBlur}\n                          // onSearch={onSearch}\n                          filterOption={(input, option) =>\n                              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                          }\n                      >\n                          <Option value=\"user\">User</Option>\n                          <Option value=\"oil_depot_shop\">Oil depot shop</Option>\n                          {/*<Option value=\"QW5ZGQ\">Mobil Super Motor Synthetic [SL 10W-40, MA2] 0.8L - 140.000*/}\n                          {/*    ₫</Option>*/}\n                      </Select>\n                  </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://pogofdev.ooguy.com:8082/api/test/';\n// const API_URL = 'http://localhost:8082/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n\n  async createNewTokens(amount) {\n      return await axios.post(API_URL + 'user/mint', {amount}, {headers: authHeader()});\n  }\n  async transferTokens(recipient,amount) {\n      return await axios.post(API_URL + 'user/transfer', {recipient,amount}, {headers: authHeader()});\n  }\n\n  async buyTicket(ticketType,quantity) {\n      return await axios.post(API_URL + 'user/buy', {ticketType,quantity}, {headers: authHeader()});\n  }\n\n  async useTicket(ticketNumbers,shopUsername) {\n      return await axios.post(API_URL + 'user/use', {ticketNumbers,shopUsername}, {headers: authHeader()});\n  }\n\n  async getUserTransactions() {\n      return await axios.post(API_URL + 'user/transactions', {}, {headers: authHeader()});\n  }\n\n  async getOwnerTickets() {\n      return await axios.post(API_URL + 'user/getOwnerTickets', {}, {headers: authHeader()});\n  }\n\n  async getRedeemTickets() {\n      return await axios.post(API_URL + 'user/getRedeemTickets', {}, {headers: authHeader()});\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div>\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","import {differenceInMinutes, formatDistance, parse} from 'date-fns';\nimport {notification} from \"antd\";\n\nlet viLocale = require('date-fns/locale/vi');\nconst accounting = require('accounting');\n\n\nexport const getUrlParam = function (paramName) {\n    let Url = new URL(window.location.href);\n    return Url.searchParams.get(paramName);\n};\n\nexport const getUrlParam_2 = function (variable) {\n    var query = window.location.search.substring(1);\n    console.log(query)//\"app=article&act=news_content&aid=160990\"\n    var vars = query.split(\"&\");\n    console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\");\n        console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ]\n        if (pair[0] == variable) {\n            return pair[1];\n        }\n    }\n    return (false);\n}\n\nexport const formatMoney = function (money) {\n    return accounting.formatMoney(money, {\n        symbol: ' đ',\n        thousand: '.',\n        format: '%v%s',\n        precision: 0\n    });\n};\nexport const format_Number = function (number) {\n    return accounting.formatNumber(number, {\n        symbol: '',\n        thousand: ',',\n        format: '%v%s',\n        precision: 2\n    });\n};\nexport const format_Number_int = function (number) {\n    return accounting.formatNumber(number, {\n        symbol: '',\n        thousand: ',',\n        format: '%v%s',\n        precision: 0\n    });\n};\n\nexport const locale = \"vi-vn\";\nexport const currencyFormatter = value => {\n    return new Intl.NumberFormat(locale, {\n        style: \"currency\",\n        currency: \"VND\"\n    }).format(value);\n};\n\nexport const percentFormatter = value => {\n    return `${value} %`\n};\n\nexport const pointFormatter = value => {\n    return accounting.formatMoney(value, {\n        symbol: ' ₫',\n        thousand: '.',\n        format: '%v%s',\n        precision: 0\n    });\n};\n\nexport const numberFormater = value => {\n    return accounting.formatMoney(value, {\n        symbol: '',\n        thousand: '.',\n        format: '%v%s',\n        precision: 0\n    });\n};\n\n\n\nexport const currencyParser = val => {\n    try {\n        // for when the input gets clears\n        if (typeof val === \"string\" && !val.length) {\n            // val = \"0.0\";\n            val = \"0\";\n        }\n\n        // detecting and parsing between comma and dot\n        var group = new Intl.NumberFormat(locale).format(1111).replace(/1/g, \"\");\n        var decimal = new Intl.NumberFormat(locale).format(1.1).replace(/1/g, \"\");\n        var reversedVal = val.replace(new RegExp(\"\\\\\" + group, \"g\"), \"\");\n        reversedVal = reversedVal.replace(new RegExp(\"\\\\\" + decimal, \"g\"), \".\");\n        //  => 1232.21 €\n\n        // removing everything except the digits and dot\n        reversedVal = reversedVal.replace(/[^0-9.]/g, \"\");\n        //  => 1232.21\n\n        // appending digits properly\n        const digitsAfterDecimalCount = (reversedVal.split(\".\")[1] || []).length;\n        const needsDigitsAppended = digitsAfterDecimalCount > 2;\n\n        if (needsDigitsAppended) {\n            reversedVal = reversedVal * Math.pow(10, digitsAfterDecimalCount - 2);\n        }\n\n        return Number.isNaN(reversedVal) ? 0 : reversedVal;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const change_alias = (alias) => {\n    var str = alias;\n    str = str.toLowerCase();\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\n    str = str.replace(/đ/g, 'd');\n    str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g, ' ');\n    str = str.replace(/ + /g, ' ');\n    str = str.trim();\n    return str;\n};\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function isNumeric(value) {\n    return /^-{0,1}\\d+$/.test(value);\n}\n\nexport function input_isNumeric(new_value, old_value) {\n    if (new_value !== null && new_value !== '') {\n        if (isNumeric(new_value)) {\n            return new_value\n        } else {\n            return old_value\n        }\n    } else {\n        return ''\n    }\n}\n\nexport function showMessage(type, title, content) {\n    switch (type) {\n        case 'info':\n            notification.info({\n                message: title,\n                description: content,\n                placement: 'bottomRight'\n            });\n            break\n        case 'success':\n            notification.success({\n                message: title,\n                description: content,\n                placement: 'bottomRight'\n            });\n            break\n        case 'error':\n            notification.error({\n                message: title,\n                description: content,\n                placement: 'bottomRight'\n            });\n            break\n        case 'warning':\n            notification.warning({\n                message: title,\n                description: content,\n                placement: 'bottomRight'\n            });\n            break\n        case 'warn':\n            notification.warn({\n                message: title,\n                description: content,\n                placement: 'bottomRight'\n            });\n            break\n        case 'open':\n            notification.open({\n                message: title,\n                description: content,\n                placement: 'bottomRight'\n            });\n            break\n        case 'close':\n            notification.close(content);\n            break\n        case 'destroy':\n            notification.destroy();\n            break\n    }\n}\n\nexport const getRandomColorRange = (numberOfTables) => {\n    let colors = [];\n    for (let i = 0; i < numberOfTables; i++) {\n        let r = getRandomInt(0, 255);\n        let g = getRandomInt(0, 255);\n        let b = getRandomInt(0, 255);\n        colors.push(`rgb(${r},${g},${b})`)\n    }\n\n    return colors\n}\n\nexport const getRandomColor = (table_id) => {\n    let r = getRandomInt(0, 255);\n    let g = getRandomInt(0, 255);\n    let b = getRandomInt(0, 255);\n    return {\n        id: table_id,\n        color: `rgb(${r},${g},${b})`\n    }\n}\n\nexport const uuidv4 = function () {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n};\n\nexport const getTimeAgo = function (datetimeString) {\n    let time = parse(\n        datetimeString,\n        'dd/MM/yyyy HH:mm:ss',\n        new Date()\n    );\n    return formatDistance(time, new Date(), {includeSeconds: true, locale: viLocale});\n};\n\nexport const convertStringToDate = function (stringDate) {\n    return parse(\n        stringDate,\n        'dd/MM/yyyy HH:mm:ss',\n        new Date());\n};\n\nexport const getColor = function (time, maxMinutes) {\n    let percentColors = [\n        {pct: 0.0, color: {r: 0xff, g: 0x00, b: 0}},\n        {pct: 0.5, color: {r: 0xff, g: 0xff, b: 0}},\n        {pct: 1.0, color: {r: 0x00, g: 0xff, b: 0}}];\n\n\n    let differenceInMin = Math.abs(differenceInMinutes(time, new Date()));\n    // lay percent so voi maxMinutes\n    let pct = differenceInMin >= maxMinutes ? 0 : 1 - ((differenceInMin / maxMinutes));\n    for (var i = 1; i < percentColors.length - 1; i++) {\n        if (pct < percentColors[i].pct) {\n            break;\n        }\n    }\n    // console.log(differenceInMin)\n    let lower = percentColors[i - 1];\n    let upper = percentColors[i];\n    let range = upper.pct - lower.pct;\n    let rangePct = (pct - lower.pct) / range;\n    let pctLower = 1 - rangePct;\n    let pctUpper = rangePct;\n    // return {\n    //     r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\n    //     g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\n    //     b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\n    // };\n\n    let color = {\n        r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\n        g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\n        b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\n    };\n    return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\n\n    // return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\n    // var getColorForPercentage = function(pct) {\n    //     for (var i = 1; i < percentColors.length - 1; i++) {\n    //         if (pct < percentColors[i].pct) {\n    //             break;\n    //         }\n    //     }\n    //     var lower = percentColors[i - 1];\n    //     var upper = percentColors[i];\n    //     var range = upper.pct - lower.pct;\n    //     var rangePct = (pct - lower.pct) / range;\n    //     var pctLower = 1 - rangePct;\n    //     var pctUpper = rangePct;\n    //     var color = {\n    //         r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\n    //         g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\n    //         b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\n    //     };\n    //     return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\n    //     // or output as hex if preferred\n    // }\n};\n\n\nexport function hashCode(str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n}\n\nexport function intToRGB(i){\n    var c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return '#'+(\"00000\".substring(0, 6 - c.length) + c);\n}\n","import React, {Component} from \"react\";\nimport UserService from \"../services/user.service\";\nimport {\n    Button,\n    Form,\n    Input,\n    InputNumber,\n    Modal,\n    notification,\n    PageHeader,\n    Row,\n    Select,\n    Statistic,\n    Table,\n    Tabs,\n    Tag\n} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport {currencyParser, format_Number_int, numberFormater, pointFormatter} from \"../Utils\";\nimport * as moment from 'moment'\n\nconst {Option} = Select;\nconst {TabPane} = Tabs;\n\n\nconst TICKETS = {\n    OI93EX: \"Castrol GTX [SL 20W-50] 4L\",\n    ZMGPBJ: \"Mobil Super 2000 [SP 10W-40] 4L\",\n    QW5ZGQ: \"Mobil Super Motor Synthetic [SL 10W-40, MA2] 0.8L\",\n\n}\n\nexport default class BoardUser extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            content: \"\",\n            modal1Visible: false,\n            modal2Visible: false,\n            modal3Visible: false,\n            newAmount: 0,\n            recipient: '',\n            totalSupply: 0,\n            ticketType: undefined,\n            ticketQuantity: 0,\n            transactions: [],\n            tickets: [],\n            redeemTickets: [],\n            selectedRowKeys: [],\n            ownedItems: 0,\n            shopUsername:'oildepotshop',\n            balance: 0\n        };\n        this.myRef = React.createRef();\n        this.myRef1 = React.createRef();\n        this.columns = [\n            {\n\n                title: 'From',\n                dataIndex: 'from',\n                render: from => {\n                    return <div style={{textAlign: \"left\"}}>{from}</div>\n                },\n            },\n            {\n                title: 'To',\n                dataIndex: 'to',\n                render: to => {\n                    return <div style={{textAlign: \"left\"}}>{to}</div>\n                },\n            },\n            {\n                title: 'Amount',\n                dataIndex: 'amount',\n                render: amount => {\n                    return <div style={{textAlign: \"right\"}}>{format_Number_int(amount)}</div>\n                },\n            },\n            {\n                title: 'Trans Type',\n                dataIndex: 'transType',\n                render: transType => {\n                    return <div style={{textAlign: \"right\"}}>{(transType)}</div>\n                },\n            },\n            {\n                title: 'Balance',\n                dataIndex: 'balance',\n                render: balance => {\n                    return <div style={{textAlign: \"right\"}}>{format_Number_int(balance)}</div>\n                },\n            },\n            {\n                title: 'Description',\n                dataIndex: 'description',\n                render: description => {\n                    return <div style={{textAlign: \"left\"}}>{(description)}</div>\n                },\n            },\n            {\n                title: 'Transfer date',\n                dataIndex: 'timeStamp',\n                render: timeStamp => {\n                    return <div\n                        style={{textAlign: \"right\"}}>{moment(parseInt(timeStamp)).format(\"DD/MM/YYYY HH:mm:ss\")}</div>\n                },\n            },\n        ];\n        this.columns2 = [\n            {\n\n                title: 'Ticket Number',\n                dataIndex: 'ticketNumber',\n                render: ticketNumber => {\n                    return <div\n                        style={{textAlign: \"left\"}}>{ticketNumber.substring((ticketNumber.indexOf('-') + 1), ticketNumber.length)}</div>\n                },\n            },\n            {\n\n                title: 'Ticket',\n                dataIndex: 'ticketType',\n                render: ticketType => {\n                    return <div style={{textAlign: \"left\"}}>{TICKETS[ticketType]}</div>\n                },\n            },\n            {\n                title: 'Price',\n                dataIndex: 'price',\n                render: price => {\n                    return <div style={{textAlign: \"left\"}}>{format_Number_int(price)}</div>\n                },\n            },\n            {\n                title: 'Purchase time ',\n                dataIndex: 'buyDateTime',\n                render: buyDateTime => {\n                    return <div\n                        style={{textAlign: \"right\"}}>{moment(parseInt(buyDateTime)).format(\"DD/MM/YYYY HH:mm:ss\")}</div>\n                },\n            },\n        ];\n\n        this.columns4 = [\n            {\n\n                title: 'Ticket Number',\n                dataIndex: 'ticketNumber',\n                render: ticketNumber => {\n                    return <div\n                        style={{textAlign: \"left\"}}>{ticketNumber.substring((ticketNumber.indexOf('-') + 1), ticketNumber.length)}</div>\n                },\n            },\n            {\n\n                title: 'Ticket',\n                dataIndex: 'ticketType',\n                render: ticketType => {\n                    return <div style={{textAlign: \"left\"}}>{TICKETS[ticketType]}</div>\n                },\n            },\n            {\n\n                title: 'Buyer',\n                dataIndex: 'buyer',\n                render: buyer => {\n                    return <div style={{textAlign: \"left\"}}>{buyer}</div>\n                },\n            },\n            {\n                title: 'Price',\n                dataIndex: 'price',\n                render: price => {\n                    return <div style={{textAlign: \"left\"}}>{format_Number_int(price)}</div>\n                },\n            },\n          /*  {\n                title: 'Purchase time ',\n                dataIndex: 'buyDateTime',\n                render: buyDateTime => {\n                    return <div\n                        style={{textAlign: \"right\"}}>{moment(parseInt(buyDateTime)).format(\"DD/MM/YYYY HH:mm:ss\")}</div>\n                },\n            },*/\n            {\n                title: 'Used time ',\n                dataIndex: 'useDateTime',\n                render: useDateTime => {\n                    return <div\n                        style={{textAlign: \"right\"}}>{moment(parseInt(useDateTime)).format(\"DD/MM/YYYY HH:mm:ss\")}</div>\n                },\n            },\n        ];\n        this.columns3 = [\n\n            {\n\n                title: 'Ticket Number',\n                dataIndex: 'ticketNumber',\n                render: ticketNumber => {\n                    return <div\n                        style={{textAlign: \"left\"}}>{ticketNumber.substring((ticketNumber.indexOf('-') + 1), ticketNumber.length)}</div>\n                },\n            },\n            {\n\n                title: 'Ticket',\n                dataIndex: 'ticketType',\n                render: ticketType => {\n                    return <div style={{textAlign: \"left\"}}>{TICKETS[ticketType]}</div>\n                },\n            },\n            {\n                title: 'Price',\n                dataIndex: 'price',\n                render: price => {\n                    return <div style={{textAlign: \"left\"}}>{format_Number_int(price)}</div>\n                },\n            },\n\n            {\n\n                title: 'Buyer',\n                dataIndex: 'buyer',\n                render: buyer => {\n                    return <div style={{textAlign: \"left\"}}>{buyer}</div>\n                },\n            },\n            {\n\n                title: 'Owner',\n                dataIndex: 'owner',\n                render: buyer => {\n                    return <div style={{textAlign: \"left\"}}>{buyer}</div>\n                },\n            },\n            {\n                title: 'Purchase time ',\n                dataIndex: 'buyDateTime',\n                render: buyDateTime => {\n                    return <div\n                        style={{textAlign: \"right\"}}>{moment(parseInt(buyDateTime)).format(\"DD/MM/YYYY HH:mm:ss\")}</div>\n                },\n            },\n            {\n\n                title: 'Status',\n                dataIndex: 'status',\n                render: status => {\n                    return <div style={{textAlign: \"left\"}}>{status}</div>\n                },\n            },\n        ];\n\n        this.columns5 = [\n\n            {\n\n                title: 'Ticket Number',\n                dataIndex: 'ticketNumber',\n                render: ticketNumber => {\n                    return <div\n                        style={{textAlign: \"left\"}}>{ticketNumber.substring((ticketNumber.indexOf('-') + 1), ticketNumber.length)}</div>\n                },\n            },\n            {\n\n                title: 'Ticket',\n                dataIndex: 'ticketType',\n                render: ticketType => {\n                    return <div style={{textAlign: \"left\"}}>{TICKETS[ticketType]}</div>\n                },\n            },\n            {\n                title: 'Price',\n                dataIndex: 'price',\n                render: price => {\n                    return <div style={{textAlign: \"left\"}}>{format_Number_int(price)}</div>\n                },\n            },\n\n            {\n\n                title: 'Owner',\n                dataIndex: 'owner',\n                render: owner => {\n                    return <div style={{textAlign: \"left\"}}>{owner}</div>\n                },\n            },\n\n            {\n                title: 'Redeem time ',\n                dataIndex: 'redeemDateTime',\n                render: redeemDateTime => {\n                    return <div\n                        style={{textAlign: \"right\"}}>{moment(parseInt(redeemDateTime)).format(\"DD/MM/YYYY HH:mm:ss\")}</div>\n                },\n            },\n            {\n\n                title: 'Status',\n                dataIndex: 'status',\n                render: status => {\n                    return <div style={{textAlign: \"left\"}}>{status}</div>\n                },\n            },\n        ];\n    }\n\n    async componentDidMount() {\n\n         this.loadBalance()\n         this.loadTrans()\n         this.loadTickets()\n         this.loadRedeemTickets()\n\n\n    }\n\n    loadBalance = async () => {\n        let transactions = await UserService.getUserBoard()\n        console.log(`====>`, transactions)\n        // debugger\n        this.setState({\n            ...transactions.data,\n        })\n    }\n\n    loadTrans = async () => {\n        let transactions = await UserService.getUserTransactions()\n        console.log(`====>`, transactions)\n        // debugger\n        this.setState({\n            transactions: transactions.data\n        })\n    }\n\n    loadTickets = async () => {\n        let transactions = await UserService.getOwnerTickets()\n        // console.log(`====>`, transactions)\n        this.setState({\n            tickets: transactions.data.map((item) => {\n                item.key = item.ticketNumber;\n                return item\n            }),\n            ownedItems: transactions.data.length\n        })\n    }\n    loadRedeemTickets = async () => {\n        let transactions = await UserService.getRedeemTickets()\n        // console.log(`====>`, transactions)\n        this.setState({\n            redeemTickets: transactions.data.map((item) => {\n                item.key = item.ticketNumber;\n                return item\n            }),\n            // ownedItems: transactions.data.length\n        })\n    }\n\n\n    setModal1Visible(modal1Visible) {\n        this.setState({modal1Visible});\n    }\n\n    setModal2Visible(modal2Visible) {\n        this.setState({modal2Visible});\n    }\n\n    setModal3Visible(modal3Visible) {\n        this.setState({modal3Visible});\n    }\n\n\n    onChange = (newAmount) => {\n        this.setState({newAmount});\n    }\n\n    onChangeQuantity = (ticketQuantity) => {\n        console.log(ticketQuantity)\n        this.setState({ticketQuantity});\n    }\n\n    onRecipientChange = (recipient) => {\n        this.setState({recipient: recipient.target.value});\n    }\n\n    onChangeShopUsername = (shopUsername) => {\n        this.setState({shopUsername: shopUsername.target.value});\n    }\n\n    handleOk = async () => {\n        try {\n            console.log('===>', await this.myRef1.current.validateFields())\n            let result = await UserService.createNewTokens(this.state.newAmount)\n\n            if (result.data.success) {\n                console.log('result.data.data', result.data.data)\n                this.setState({\n                    ...result.data.data,\n                    modal1Visible: false\n                }, async () => await this.loadTrans());\n            } else {\n                this.setState({\n                    modal1Visible: false\n                });\n            }\n\n            console.log('result.data', result.data)\n        } catch (e) {\n\n        }\n    }\n\n    handleOkTransfer = async () => {\n\n        try {\n            console.log('===>', await this.myRef.current.validateFields())\n            let result = await UserService.transferTokens(this.state.recipient, this.state.newAmount)\n\n            if (result.data.success) {\n                console.log('result.data.data', result.data.data)\n                this.setState({\n                    balance: result.data.data.fromUpdatedBalance,\n                    // ...result.data.data,\n                    modal2Visible: false\n                }, async () => await this.loadTrans());\n            } else {\n                this.setState({\n                    modal2Visible: false\n                }, () => notification.error({\n                    message: 'Error',\n                    description:\n                    result.data.error,\n                    onClick: () => {\n                        console.log('Notification Clicked!');\n                    },\n                }));\n            }\n\n            console.log('result.data', result.data)\n        } catch (e) {\n\n        }\n\n\n    }\n\n\n    handleOkBuyTicket = async () => {\n\n        try {\n            await this.myRef.current.validateFields()\n            let result = await UserService.buyTicket(this.state.ticketType, this.state.ticketQuantity)\n            console.log(`===>`, result)\n            if (result.data && result.data.length >= 0) {\n                // console.log('result.data.data', result.data.data)\n                this.setState({\n                    // balance:result.data.data.fromUpdatedBalance,\n                    // ...result.data.data,\n                    modal3Visible: false\n                }, async () => {\n                    this.loadTrans();\n                    this.loadTickets();\n                    this.loadBalance();\n\n                });\n            } else {\n                this.setState({\n                    modal3Visible: false\n                }, () => notification.error({\n                    message: 'Error',\n                    description:\n                    result.data.error,\n                    onClick: () => {\n                        console.log('Notification Clicked!');\n                    },\n                }));\n            }\n\n            console.log('result.data', result.data)\n        } catch (e) {\n\n        }\n\n\n    }\n\n    handleOkUseTicket = async () => {\n\n        try {\n            // await this.myRef.current.validateFields()\n            let result = await UserService.useTicket(this.state.selectedRowKeys,this.state.shopUsername)\n            console.log(`===>`, result)\n            if (result.data && result.data.success) {\n                // console.log('result.data.data', result.data.data)\n                this.setState({\n                    // balance:result.data.data.fromUpdatedBalance,\n                    // ...result.data.data,\n                    modal3Visible: false\n                }, async () => {\n                    this.loadTrans();\n                    this.loadTickets();\n                    this.loadBalance();\n\n                });\n            } else {\n                this.setState({\n                    modal3Visible: false\n                }, () => notification.error({\n                    message: 'Error',\n                    description:\n                    result.data.error,\n                    onClick: () => {\n                        console.log('Notification Clicked!');\n                    },\n                }));\n            }\n\n            console.log('result.data', result.data)\n        } catch (e) {\n\n        }\n\n\n    }\n\n    confirm = () => {\n        Modal.confirm({\n            title: 'Confirm',\n            icon: <ExclamationCircleOutlined/>,\n            content: 'Are you sure?',\n            okText: 'OK',\n            cancelText: 'Cancel',\n            onOk: this.handleOk\n        });\n    }\n    confirmTransfer = () => {\n        Modal.confirm({\n            title: 'Confirm',\n            icon: <ExclamationCircleOutlined/>,\n            content: 'Are you sure?',\n            okText: 'OK',\n            cancelText: 'Cancel',\n            onOk: this.handleOkTransfer\n        });\n    }\n\n    confirmBuyTickets = () => {\n        Modal.confirm({\n            title: 'Confirm',\n            icon: <ExclamationCircleOutlined/>,\n            content: 'Are you sure?',\n            okText: 'OK',\n            cancelText: 'Cancel',\n            onOk: this.handleOkBuyTicket\n        });\n    }\n\n    confirmUseTickets = () => {\n        Modal.confirm({\n            title: 'Confirm',\n            icon: <ExclamationCircleOutlined/>,\n            content: 'Are you sure?',\n            okText: 'OK',\n            cancelText: 'Cancel',\n            onOk: this.handleOkUseTicket\n        });\n    }\n\n    anyValidation = (rule, value, callback) => {\n        if (value <= 0) {\n            callback('Please enter value greater than 0');\n        } else {\n            callback();\n        }\n    }\n\n    onChangeTicket = (ticketType) => {\n        this.setState({ticketType})\n    }\n    onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({selectedRowKeys});\n    };\n\n    render() {\n        const {loading, selectedRowKeys} = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div className=\"container\">\n                <PageHeader\n                    onBack={() => window.history.back()}\n                    title={this.state.username}\n                    tags={<Tag color=\"blue\">Running</Tag>}\n                    subTitle={`${this.state.roles}`}\n                    extra={[\n                        this.state.roles && this.state.roles.length > 0 && this.state.roles[0] !== 'INTEGRATE' &&\n                        <Button key=\"3\" onClick={() => this.setModal3Visible(true)}>{`Buy Item`}</Button>,\n\n                        <Button key=\"2\" onClick={() => this.setModal2Visible(true)}>{`Transfer`}</Button>,\n                        this.state.roles && this.state.roles.length > 0 && this.state.roles[0] === 'INTEGRATE' &&\n                        <Button key=\"1\" type=\"primary\" onClick={() => this.setModal1Visible(true)}>\n                            {`Create new ₫`}\n                        </Button>,\n\n                    ]}\n                >\n                    <Row>\n                        {this.state.roles && this.state.roles.length > 0 && this.state.roles[0] === 'INTEGRATE' &&\n                        <Statistic title=\"Total Supply\" suffix={'₫'} value={this.state.totalSupply}/>}\n                        <Statistic\n                            title={this.state.roles && this.state.roles.length > 0 && this.state.roles[0] === 'INTEGRATE' ? 'Not Yet Redeemed Tickets' : 'Owned Tickets'}\n                            prefix=\"\"\n                            value={this.state.ownedItems}\n                            style={{\n                                margin: '0 32px',\n                            }}\n                        />\n                        <Statistic title=\"Balance\" suffix={'₫'} ix=\"d\" value={this.state.balance}/>\n                    </Row>\n                    <Row>\n                        <Tabs type=\"card\" style={{width: `100%`, marginTop: 20}}>\n                            <TabPane tab=\"Transactions\" key=\"1\">\n                                {/*<div style={{marginTop:20,fontWeight:'bold',fontSize:15}}>Transactions:</div>*/}\n                                <Table style={{width: '100%', marginTop: 10}} columns={this.columns}\n                                       dataSource={this.state.transactions}/>\n                            </TabPane>\n                            {this.state.roles && this.state.roles.length > 0 && this.state.roles[0] === 'INTEGRATE' ?\n                                <><TabPane tab=\"Not yet redeemed tickets\" key=\"2\">\n                                    <div style={{marginBottom: 16, width: `100%`}}>\n                                        {/*<Button type=\"primary\" onClick={this.start} disabled={!hasSelected}\n                                            loading={loading}>\n                                        Use tickets at OD shop\n                                    </Button>\n                                    <span style={{marginLeft: 8}}>\n                                        {hasSelected ? `Selected ${selectedRowKeys.length} tickets` : ''}\n                                      </span>*/}\n                                        <Table\n                                            // rowSelection={rowSelection}\n                                            style={{width: '100%', marginTop: 10}}\n                                            columns={this.columns3} dataSource={this.state.tickets}/>\n                                    </div>\n                                </TabPane>\n                                    <TabPane tab=\"Redeemed tickets\" key=\"3\">\n                                        <div style={{marginBottom: 16, width: `100%`}}>\n                                            <Table\n                                                // rowSelection={rowSelection}\n                                                style={{width: '100%', marginTop: 10}}\n                                                columns={this.columns5} dataSource={this.state.redeemTickets}/>\n                                        </div>\n                                    </TabPane>\n                                </> : <TabPane tab=\"Tickets\" key=\"2\">\n                                    <div style={{marginBottom: 16, width: `100%`}}>\n                                        {this.state.roles && this.state.roles.length > 0 && this.state.roles[0] !== 'OIL_DEPOT_SHOP' &&\n                                        ( <Input style={{width:170,marginRight:5}} value={this.state.shopUsername} placeholder=\"Shop's username\" onChange={this.onChangeShopUsername}/>)}\n                                        <Button type=\"primary\" onClick={this.confirmUseTickets} disabled={!hasSelected}\n                                                loading={loading}>\n                                            {this.state.roles && this.state.roles.length > 0 && this.state.roles[0] === 'OIL_DEPOT_SHOP' ?\n                                                `Redeem tickets at Integrate for Tokens`:`Use tickets at OD shop`}\n                                        </Button>\n                                        <span style={{marginLeft: 8}}>\n                                        {hasSelected ? `Selected ${selectedRowKeys.length} tickets` : ''}\n                                      </span>\n                                        {this.state.roles && this.state.roles.length > 0 && this.state.roles[0] === 'OIL_DEPOT_SHOP' ?\n                                            (<Table rowSelection={rowSelection} style={{width: '100%', marginTop: 10}}\n                                                    columns={this.columns4} dataSource={this.state.tickets}/>) :\n                                            (<Table rowSelection={rowSelection} style={{width: '100%', marginTop: 10}}\n                                                    columns={this.columns2} dataSource={this.state.tickets}/>)}\n\n                                    </div>\n                                </TabPane>}\n\n\n                        </Tabs>\n\n                    </Row>\n                </PageHeader>\n\n                <Modal\n                    title={`Create new ₫`}\n                    style={{top: '20%'}}\n                    visible={this.state.modal1Visible}\n                    onOk={this.confirm}\n                    onCancel={() => this.setModal1Visible(false)}\n                >\n                    <Form\n                        // labelCol={{span: 4}}\n                        wrapperCol={{span: 14, offset: 0}}\n                        layout={'vertical'}\n                        ref={this.myRef1}\n\n                    >\n                        <Form.Item label=\"Number of ₫ to create\" name=\"layout\"\n                                   rules={[\n                                       {\n                                           required: true,\n                                           message: 'Please enter amount',\n                                       },\n                                       {\n                                           validator: async (_, names) => {\n                                               if (!names || parseInt(names) <= 0) {\n                                                   return Promise.reject(new Error('Please enter value greater than 0'));\n                                               }\n                                           },\n                                       },\n                                   ]}\n                        >\n                            <InputNumber\n                                value={this.state.newAmount}\n                                // defaultValue={1000000}\n                                style={{width: `100%`}}\n                                step={10000}\n                                formatter={pointFormatter}\n                                parser={currencyParser}\n                                onChange={this.onChange}\n                            />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    title={`Transfer ₫ to user`}\n                    style={{top: '20%'}}\n                    visible={this.state.modal2Visible}\n                    onOk={this.confirmTransfer}\n                    onCancel={() => this.setModal2Visible(false)}\n                >\n                    <Form\n                        // labelCol={{span: 4}}\n                        wrapperCol={{span: 14, offset: 0}}\n                        layout={'vertical'}\n                        ref={this.myRef}\n                    >\n                        <Form.Item label=\"Recipient\"\n                                   name=\"Recipient\"\n                                   rules={[\n                                       {\n                                           required: true,\n                                           message: 'Please input your Recipient!',\n                                       }]}\n                        >\n                            <Input placeholder=\"Please enter username to send\" onChange={this.onRecipientChange}/>\n                        </Form.Item>\n                        <Form.Item label=\"Number of ₫ to transfer\" name=\"amount\"\n                                   rules={[\n                                       {\n                                           required: true,\n                                           message: 'Please enter amount',\n                                       },\n                                       {\n                                           validator: async (_, names) => {\n                                               if (!names || parseInt(names) <= 0) {\n                                                   return Promise.reject(new Error('Please enter value greater than 0'));\n                                               }\n                                           },\n                                       },\n                                   ]}\n                        >\n                            <InputNumber\n                                value={this.state.newAmount}\n                                // defaultValue={1000000}\n                                style={{width: `100%`}}\n                                step={10000}\n                                formatter={pointFormatter}\n                                parser={currencyParser}\n                                onChange={this.onChange}\n                            />\n                        </Form.Item>\n\n                    </Form>\n                </Modal>\n\n\n                <Modal\n                    title={`Buy tickets`}\n                    style={{top: '20%'}}\n                    visible={this.state.modal3Visible}\n                    onOk={this.confirmBuyTickets}\n                    onCancel={() => this.setModal3Visible(false)}\n                >\n                    <Form\n                        // labelCol={{span: 4}}\n                        // wrapperCol={{span: 14, offset: 0}}\n                        layout={'vertical'}\n                        ref={this.myRef}\n                    >\n                        <Form.Item label=\"Ticket\"\n                                   name=\"Ticket\"\n                                   rules={[\n                                       {\n                                           required: true,\n                                           message: 'Please a ticket to buy!',\n                                       }]}\n                        >\n                            <Select\n                                showSearch\n                                style={{width: `100%`}}\n                                placeholder=\"Select a ticket to buy\"\n                                optionFilterProp=\"children\"\n                                onChange={this.onChangeTicket}\n                                // onFocus={onFocus}\n                                // onBlur={onBlur}\n                                // onSearch={onSearch}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                            >\n                                <Option value=\"OI93EX\">Castrol GTX [SL 20W-50] 4L - 465.000 ₫</Option>\n                                <Option value=\"ZMGPBJ\">Mobil Super 2000 [SP 10W-40] 4L - 900.000 ₫</Option>\n                                <Option value=\"QW5ZGQ\">Mobil Super Motor Synthetic [SL 10W-40, MA2] 0.8L - 140.000\n                                    ₫</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"Quantity\" name=\"quantity\"\n                                   rules={[\n                                       {\n                                           required: true,\n                                           message: 'Please enter quantity',\n                                       },\n                                       {\n                                           validator: async (_, names) => {\n                                               if (!names || parseInt(names) <= 0) {\n                                                   return Promise.reject(new Error('Please enter value greater than 0'));\n                                               }\n                                           },\n                                       },\n                                   ]}\n                        >\n                            <InputNumber\n\n                                defaultValue={this.state.ticketQuantity}\n                                // defaultValue={1}\n                                style={{width: `50%`}}\n                                step={1}\n                                formatter={numberFormater}\n                                parser={currencyParser}\n                                onChange={this.onChangeQuantity}\n                            />\n                        </Form.Item>\n\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            bezKoder\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"#/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}